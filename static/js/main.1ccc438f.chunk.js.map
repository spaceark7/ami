{"version":3,"sources":["img/a1.jpg","img/a2.jpg","img/a3.jpg","img/A4.jpg","logo.svg","backsound.mp3","component/cardView.jsx","component/treeView.jsx","component/intro.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","makeStyles","root","maxWidth","myJpg2","myJpg3","myJpg4","theme","paper","padding","secondaryTail","backgroundColor","palette","secondary","main","dangerTail","primary","dark","Intro","props","bg_ref","React","createRef","bg","current","console","log","window","addEventListener","value","scrollY","this","style","backgroundSize","className","ref","id","Component","flexGrow","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"8EAAAA,EAAOC,QAAU,IAA0B,gC,mBCA3CD,EAAOC,QAAU,IAA0B,gC,mBCA3CD,EAAOC,QAAU,IAA0B,gC,mBCA3CD,EAAOC,QAAU,IAA0B,gC,4ECA3CD,EAAOC,QAAU,IAA0B,kC,wCCA3CD,EAAOC,QAAU,IAA0B,uC,qVCWzBC,YAAW,CAC3BC,KAAM,CACJC,SAAU,OCmBJC,IAQAC,IAOAC,IAIQL,aAAW,SAACM,GAAD,MAAY,CACvCC,MAAO,CACLC,QAAS,YAEXC,cAAe,CACbC,gBAAiBJ,EAAMK,QAAQC,UAAUC,MAE3CC,WAAY,CACVJ,gBAAiBJ,EAAMK,QAAQI,QAAQC,U,gDCR5BC,G,wDA9Cb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,OAASC,IAAMC,YACpB,EAAKC,GAAK,EAAKH,OAAOI,QACtBC,QAAQC,IAAI,EAAKH,IAJA,E,qDAajB,OALAI,OAAOC,iBAAiB,UAAU,WAChC,IAAIC,EAAQF,OAAOG,QACnBC,KAAKR,GAAGS,MAAMC,eAAiB,IAAc,EAARJ,EAAY,QAIjD,yBAAKK,UAAU,SACb,wBAAIA,UAAU,gBAAd,iCACA,yBAAKA,UAAU,UACb,kCACA,yBAAKC,IAAKJ,KAAKX,OAAQgB,GAAG,QAE5B,yBAAKF,UAAU,aACb,wBAAIA,UAAU,eAAd,kDAGA,uBAAGA,UAAU,qBAAb,iNAKE,6BACA,6BANF,6VAY0B,IACxB,gEACA,oC,GAvCQG,cCOFpC,aAAW,SAACM,GAAD,MAAY,CACvCL,KAAM,CACJoC,SAAU,OAgBCC,MAZf,WACE,OACE,yBAAKL,UAAU,OACb,kBAAC,EAAD,QCRcM,QACW,cAA7Bb,OAAOc,SAASC,UAEe,UAA7Bf,OAAOc,SAASC,UAEhBf,OAAOc,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL/B,QAAQ+B,MAAMA,EAAMC,c","file":"static/js/main.1ccc438f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/a1.87c374c1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/a2.cde390d3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/a3.55263065.jpg\";","module.exports = __webpack_public_path__ + \"static/media/A4.fb477057.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/backsound.d021b283.mp3\";","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Zoom } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 500,\r\n  },\r\n});\r\n\r\nexport default function ImgMediaCard(props) {\r\n  const classes = useStyles();\r\n\r\n  console.log(props.img);\r\n  return (\r\n    <Zoom in={true} style={{ transitionDelay: props.delay }}>\r\n      <Card className={classes.root}>\r\n        <CardActionArea>\r\n          <CardMedia\r\n            component=\"img\"\r\n            alt=\"Ami\"\r\n            height=\"285\"\r\n            image={props.img}\r\n            title=\"Rahmi\"\r\n          />\r\n          <CardContent>\r\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n              {props.judul}\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n              {props.desc}\r\n            </Typography>\r\n          </CardContent>\r\n        </CardActionArea>\r\n        <CardActions>\r\n          <Button size=\"small\" color=\"primary\">\r\n            Benar\r\n          </Button>\r\n          <Button size=\"small\" color=\"primary\">\r\n            Tidak\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n    </Zoom>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Timeline } from \"@material-ui/lab\";\r\nimport TimelineItem from \"@material-ui/lab/TimelineItem\";\r\nimport TimelineSeparator from \"@material-ui/lab/TimelineSeparator\";\r\nimport TimelineConnector from \"@material-ui/lab/TimelineConnector\";\r\nimport TimelineContent from \"@material-ui/lab/TimelineContent\";\r\nimport TimelineOppositeContent from \"@material-ui/lab/TimelineOppositeContent\";\r\nimport TimelineDot from \"@material-ui/lab/TimelineDot\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport myJpg from \"../img/a1.jpg\";\r\nimport myJpg2 from \"../img/a2.jpg\";\r\nimport myJpg3 from \"../img/a3.jpg\";\r\nimport myJpg4 from \"../img/A4.jpg\";\r\nimport FaceIcon from \"@material-ui/icons/Face\";\r\n\r\nimport ThumbUpIcon from \"@material-ui/icons/ThumbUp\";\r\nimport ThumbDownIcon from \"@material-ui/icons/ThumbDown\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ImgMediaCard from \"./cardView\";\r\n\r\nconst deskripsi = {\r\n  judul: \"Cewek gengsi tapi ...\",\r\n  descOne:\r\n    \"Pribadi yg unik dengan tingkah polosnya selalu menggelitik. Terkadang selalu bikin kesel tapi ya mau apalagi sudah terlanjur sayang :D Hahaha\",\r\n};\r\n\r\nconst deskripsi2 = {\r\n  judul: \"Cinta itu datang dari ...\",\r\n  descOne:\r\n    \"Mungkin kebanyakan manusia biasa mencintai manusia lainnya dengan segala kelebihannya. Namun itu kasus ini sebaliknya, Setiap kekurangannya membuat rasa cinta tumbuh :p\",\r\n  gambar: myJpg2,\r\n  delay: 2500,\r\n};\r\n\r\nconst deskripsi3 = {\r\n  judul: \"Kok bisa sih ...\",\r\n  descOne:\r\n    \"Banyak hal yg terjadi, dimulai dari ngitung bonteng teu beres - beres :D sampe ngitung juga pakai jari XD. Pokoknya setiap kekurangan kutertawakan jadi sebuah alasan tumbuhnya perasaan dihati.\",\r\n  gambar: myJpg3,\r\n  delay: 4500,\r\n};\r\nconst deskripsi4 = {\r\n  judul: \"Dodol! Bikin Cape sih ..\",\r\n  descOne:\r\n    \"Entah bagaimana namun selalu terlintas rasa kesal kalau inget dia masih aja belum bisa move on :( Padahal sudah diperjuangkan semaksimal mungkin. Tapi ya sudahlah mungkin memang jalannya harus seperti ini.\",\r\n  gambar: myJpg4,\r\n  delay: 6500,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    padding: \"6px 16px\",\r\n  },\r\n  secondaryTail: {\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  dangerTail: {\r\n    backgroundColor: theme.palette.primary.dark,\r\n  },\r\n}));\r\n\r\nexport default function CustomizedTimeline() {\r\n  const classes = useStyles();\r\n  const pathImg = myJpg;\r\n  return (\r\n    <Timeline align=\"alternate\">\r\n      <TimelineItem>\r\n        <TimelineOppositeContent>\r\n          <Typography variant=\"body2\" color=\"textPrimary\">\r\n            Si Rahmi Versi Aa\r\n          </Typography>\r\n        </TimelineOppositeContent>\r\n        <TimelineSeparator>\r\n          <TimelineDot color=\"secondary\">\r\n            <FavoriteIcon color=\"white\" />\r\n          </TimelineDot>\r\n          <TimelineConnector className={classes.secondaryTail} />\r\n        </TimelineSeparator>\r\n        <TimelineContent>\r\n          <ImgMediaCard\r\n            img={myJpg}\r\n            desc={deskripsi.descOne}\r\n            judul={deskripsi.judul}\r\n          />\r\n        </TimelineContent>\r\n      </TimelineItem>\r\n      <TimelineItem>\r\n        <TimelineOppositeContent>{/* **/}</TimelineOppositeContent>\r\n        <TimelineSeparator>\r\n          <TimelineDot color=\"secondary\">\r\n            <FaceIcon />\r\n          </TimelineDot>\r\n          <TimelineConnector className={classes.secondaryTail} />\r\n        </TimelineSeparator>\r\n        <TimelineContent>\r\n          <ImgMediaCard\r\n            img={deskripsi2.gambar}\r\n            desc={deskripsi2.descOne}\r\n            judul={deskripsi2.judul}\r\n            delay={deskripsi2.delay}\r\n          />\r\n        </TimelineContent>\r\n      </TimelineItem>\r\n      <TimelineItem>\r\n        <TimelineSeparator>\r\n          <TimelineDot color=\"secondary\">\r\n            <ThumbUpIcon />\r\n          </TimelineDot>\r\n          <TimelineConnector className={classes.dangerTail} />\r\n        </TimelineSeparator>\r\n        <TimelineContent>\r\n          <ImgMediaCard\r\n            img={deskripsi3.gambar}\r\n            desc={deskripsi3.descOne}\r\n            judul={deskripsi3.judul}\r\n            delay={deskripsi3.delay}\r\n          />\r\n        </TimelineContent>\r\n      </TimelineItem>\r\n      <TimelineItem>\r\n        <TimelineSeparator>\r\n          <TimelineDot color=\"secondary\">\r\n            <ThumbDownIcon />\r\n          </TimelineDot>\r\n        </TimelineSeparator>\r\n        <TimelineContent>\r\n          <ImgMediaCard\r\n            img={deskripsi4.gambar}\r\n            desc={deskripsi4.descOne}\r\n            judul={deskripsi4.judul}\r\n            delay={deskripsi4.delay}\r\n          />\r\n        </TimelineContent>\r\n      </TimelineItem>\r\n    </Timeline>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"../styles/intro.css\";\r\nimport { Component } from \"react\";\r\n\r\nclass Intro extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.bg_ref = React.createRef();\r\n    this.bg = this.bg_ref.current;\r\n    console.log(this.bg);\r\n  }\r\n\r\n  render() {\r\n    window.addEventListener(\"scroll\", function () {\r\n      let value = window.scrollY;\r\n      this.bg.style.backgroundSize = 100 + value * 2 + \"px\";\r\n    });\r\n\r\n    return (\r\n      <div className=\"intro\">\r\n        <h2 className=\"intro-Header\">Ketika hati telah memilih ...</h2>\r\n        <div className=\"banner\">\r\n          <section></section>\r\n          <div ref={this.bg_ref} id=\"bg\"></div>\r\n        </div>\r\n        <div className=\"container\">\r\n          <h2 className=\"intro-title\">\r\n            Tuhan tahu siapa yang bersungguh - sungguh ...\r\n          </h2>\r\n          <p className=\"intro-description\">\r\n            Entah mengapa hati ini tergerak saat melihatmu dan tingkah lakumu\r\n            yang ceroboh supaya diri ini ada disampingmu dan bisa menjagamu.\r\n            Memang tidak mudah untuk meyakinkanmu meskipun niat tulus hadir\r\n            dalam hati.\r\n            <br />\r\n            <br />\r\n            Mungkin memang harus seperti inilah kenyataannya, tuhan punya\r\n            rencana agar cerita kita menghadirkan sebuah arti. Perihnya\r\n            perjuanganku agar kau tetap disini, yang mana kau selalu mengelak\r\n            karena luka dari cerita masa lalumu namun tidak menjadikan alasan\r\n            tuk berhenti berjuang akan tetapi membuatku semakin lebih menghargai\r\n            pentingya keberadaanmu.{\" \"}\r\n            <strong> #AmiBegbeg #AmiDodol #Cinta</strong>\r\n            <br />\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Intro;\r\n\r\n// const Intro = () => {\r\n//   const bg_ref = React.createRef();\r\n//   let bg = bg_ref.current;\r\n//   console.log(bg);\r\n//   window.addEventListener(\"scroll\", function () {\r\n//     let value = window.scrollY;\r\n//     bg.style.backgroundSize = 100 + value * 2 + \"px\";\r\n//   });\r\n//   return (\r\n\r\n//   );\r\n// };\r\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ElevateAppBar from \"./component/appBar\";\nimport ReactAudioPlayer from \"react-audio-player\";\nimport song from \"./backsound.mp3\";\nimport CustomizedTimeline from \"./component/treeView\";\nimport { Grid } from \"@material-ui/core\";\nimport Intro from \"./component/intro\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n}));\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Intro />\n      {/* <ElevateAppBar />\n      <CustomizedTimeline />\n\n      <ReactAudioPlayer src={song} autoPlay controls /> */}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}